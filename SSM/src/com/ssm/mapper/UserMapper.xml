<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.UserMapper">
	<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUserById，id属性值必须是唯一的，不能够重复
	        使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
	    resultType="com.ssm.model.User"就表示将查询结果封装成一个User类的对象返回
	    User类就是users表所对应的实体类
    -->
	
	 <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <!-- <resultMap type="User" id="userResultMap">
        <id property="id" column="user_id"  />
        <result property="userName" column="user_userName"  />
        <result property="userAge" column="user_userAge"  />
        <result property="userAddress" column="user_userAddress"  />
    </resultMap> -->
    
	
	<select id="getUserById" parameterType="int" resultType="com.ssm.model.User">
		select * from user where id=#{id}
	</select>
	
	<select id="getAllUser" resultType="com.ssm.model.User">
		select * from user;
	</select>
	
	<insert id="addUser" parameterType="com.ssm.model.User">
		insert into user(username,password,age) values(#{username},#{password},#{age})
	</insert>
	
	<update id="updateUser" parameterType="com.ssm.model.User">
		update user set username=#{username},password=#{password},age=#{age} where id=#{id}
	</update>
	
	<delete id="deleteUser" parameterType="int">
		delete from user where id=#{id}
	</delete>
</mapper>
